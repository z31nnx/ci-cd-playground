name: Terraform 

on:
  push: 
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs: 
  create-tfvars:
    name: Generate tfvars 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: environments/dev
    steps: 
      - name: Get repo 
        uses: actions/checkout@v4
      - name: Create tfvars file 
        run: |
          echo 'environment = "Dev"' > dev.tfvars 
          echo 'project = "Test"' >> dev.tfvars 
          echo 'owner = "Bug"' >> dev.tfvars
          echo 'managedby = "Terraform"' >> dev.tfvars
          echo 'ec2_name = "web"' >> dev.tfvars
      - name: Upload tfvars artifact 
        uses: actions/upload-artifact@v4
        with: 
          name: dev.tfvars
          path: .

  terraform-build: 
    name: Terraform format + init + validate + plan 
    runs-on: ubuntu-latest
    needs: create-tfvars  
    defaults: 
      run: 
        working-directory: environments/dev
    steps:
      - name: Get repo 
        uses: actions/checkout@v4
      - name: Download terraform 
        uses: hashicorp/setup-terraform@v3
      - name: Terraform format 
        run: terraform fmt -check -recursive
      - name: Terraform init
        run: terraform init 
      - name: terraform validate
        run: terraform validate 
      - name: Download tfvars artifacts
        uses: actions/download-artifact@v4
        with:
          name: dev.tfvars 
          path: . 
      - name: Echo dev.tfvars
        run: cat dev.tfvars    
      - name: Terraform plan 
        run: terraform plan -input=false -var-file="dev.tfvars" -out=tfplan
      - name: Upload tfplan artifact 
        uses: actions/upload-artifact@v4
        with: 
          name: tfplan
          path: environments/dev/tfplan
  
  terraform-deploy:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: [ create-tfvars, terraform-build]
    if: github.event_name == 'workflow_dispatch'
    defaults: 
      run:
        working-directory: environments/dev
    steps: 
      - name: Get repo 
        uses: actions/checkout@v4
      - name: Download tfplan artifact 
        uses: actions/download-artifact@v4
        with:
          name: tfplan 
          path: .
      - name: Terraform apply  
        run: terraform apply tfplan -auto-approve
      
  terraform-destroy:
    name: Nuke infrastructure 
    runs-on: ubuntu-latest
    needs: [ create-tfvars, terraform-build, terraform-deploy]
    if: github.event_name == 'workflow_dispatch'
    defaults:
      run: 
        working-directory: environments/dev
    steps: 
      - name: Get repo 
        uses: actions/checkout@v4
      - name: Download dev.tfvars artifact 
        uses: actions/download-artifact@v4
        with: 
          name: dev.tfvars
          path: . 
      - name: Terraform destroy 
        run: terraform destroy -var-file="dev.tfvars" -autoapprove
